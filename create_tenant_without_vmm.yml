---
- name: Populate ACI with EPGs, APs, BDs 
  hosts: apic1
  gather_facts: no
  vars:
    anchor: &anchor
      host: '{{ ansible_hostname }}'
      user: '{{ ansible_username }}'
      password: '{{ ansible_password }}'
      validate_certs: false
      tenant: '{{ item.tenant }}'
      state: present
      annotation: orchestrator:ansible
    loop: &loop
      loop:
        '{{ epg_list }}'
      loop_control:
        pause: 0.2

  tasks:
    - name: Trigger fabric snapshot (then pause 3 sec)
      cisco.aci.aci_config_snapshot:
        export_policy: ansible_auto_snapshot
        max_count: 3
        description: Backup taken before running other tasks in playbook.
        host: '{{ ansible_hostname }}'
        user: '{{ ansible_username }}'
        password: '{{ ansible_password }}'
        validate_certs: false
        state: present
        annotation: orchestrator:ansible

    - pause:
        seconds: 3

    - name: Create tenants
      cisco.aci.aci_tenant:
        <<: *anchor
      <<: *loop

    - name: Create BDs
      cisco.aci.aci_bd:
        bd: '{{ item.bd }}'
        vrf: '{{ item.vrf }}'
        arp_flooding: no
        enable_routing: yes
        endpoint_move_detect: default
        ip_learning: yes
        limit_ip_learn: yes
        multi_dest: bd-flood
        <<: *anchor
      <<: *loop

    - name: Create subnet
      cisco.aci.aci_bd_subnet:
        bd: '{{ item.bd }}'
        gateway: '{{ item.svi_ip }}'
        mask: '{{ item.bd[-2:] }}'
        scope: [public, shared]
        <<: *anchor
      <<: *loop

    - name: Create APs
      cisco.aci.aci_ap:
        ap: '{{ item.ap }}'
        <<: *anchor
      <<: *loop

    - name: Create EPGs
      cisco.aci.aci_epg:
        ap: '{{ item.ap }}'
        epg: '{{ item.epg }}'
        bd: '{{ item.bd }}'
        intra_epg_isolation: unenforced
        preferred_group: yes
        <<: *anchor
      <<: *loop


